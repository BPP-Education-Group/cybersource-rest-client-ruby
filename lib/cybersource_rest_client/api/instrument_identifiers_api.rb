=begin
#CyberSource Flex API

#Simple PAN tokenization service

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'uri'

module CyberSource
  class InstrumentIdentifiersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default, config)
      @api_client = api_client
	  @api_client.set_configuration(config)
    end
    # Create an Instrument Identifier
    # @param profile_id The id of a profile containing user specific TMS configuration.
    # @param body Please specify either a Card or Bank Account.
    # @param [Hash] opts the optional parameters
    # @return [TmsV1InstrumentidentifiersPost200Response]
    def tms_v1_instrumentidentifiers_post(profile_id, body, opts = {})
      data, status_code, headers = tms_v1_instrumentidentifiers_post_with_http_info(profile_id, body, opts)
      return data, status_code, headers
    end

    # Create an Instrument Identifier
    # @param profile_id The id of a profile containing user specific TMS configuration.
    # @param body Please specify either a Card or Bank Account.
    # @param [Hash] opts the optional parameters
    # @return [Array<(TmsV1InstrumentidentifiersPost200Response, Fixnum, Hash)>] TmsV1InstrumentidentifiersPost200Response data, response status code and response headers
    def tms_v1_instrumentidentifiers_post_with_http_info(profile_id, body, opts = {})
      
	  if @api_client.config.debugging
	  	begin
			raise
				@api_client.config.logger.debug 'Calling API: InstrumentIdentifiersApi.tms_v1_instrumentidentifiers_post ...'
			rescue
				puts 'Cannot write to log'
			end
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling InstrumentIdentifiersApi.tms_v1_instrumentidentifiers_post"
      end
      if @api_client.config.client_side_validation && profile_id.to_s.length > 36
        fail ArgumentError, 'invalid value for "profile_id" when calling InstrumentIdentifiersApi.tms_v1_instrumentidentifiers_post, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && profile_id.to_s.length < 36
        fail ArgumentError, 'invalid value for "profile_id" when calling InstrumentIdentifiersApi.tms_v1_instrumentidentifiers_post, the character length must be great than or equal to 36.'
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling InstrumentIdentifiersApi.tms_v1_instrumentidentifiers_post"
      end
      # resource path
      local_var_path = 'tms/v1/instrumentidentifiers'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=utf-8'])
      header_params[:'profile-id'] = profile_id

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TmsV1InstrumentidentifiersPost200Response')
      if @api_client.config.debugging
		begin
		raise
			@api_client.config.logger.debug "API called: InstrumentIdentifiersApi#tms_v1_instrumentidentifiers_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
		rescue
			puts 'Cannot write to log'
		end
	  end
      return data, status_code, headers
    end
  end
end
