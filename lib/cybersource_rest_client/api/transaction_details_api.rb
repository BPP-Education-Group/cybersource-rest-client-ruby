=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'uri'

module CyberSource
  class TransactionDetailsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default, config)
      @api_client = api_client
	  @api_client.set_configuration(config)
    end
    # Retrieve a Transaction
    # Include the Request ID in the GET request to retrieve the transaction details.
    # @param id Request ID. 
    # @param [Hash] opts the optional parameters
    # @return [TssV2TransactionsGet200Response]
    def get_transaction(id, opts = {})
      data, status_code, headers = get_transaction_with_http_info(id, opts)
      return data, status_code, headers
    end

    # Retrieve a Transaction
    # Include the Request ID in the GET request to retrieve the transaction details.
    # @param id Request ID. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TssV2TransactionsGet200Response, Fixnum, Hash)>] TssV2TransactionsGet200Response data, response status code and response headers
    def get_transaction_with_http_info(id, opts = {})
      
	  if @api_client.config.debugging
	  	begin
			raise
				@api_client.config.logger.debug 'Calling API: TransactionDetailsApi.get_transaction ...'
			rescue
				puts 'Cannot write to log'
			end
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling TransactionDetailsApi.get_transaction"
      end
      # resource path
      local_var_path = 'tss/v2/transactions/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/hal+json;charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TssV2TransactionsGet200Response')
      if @api_client.config.debugging
		begin
		raise
			@api_client.config.logger.debug "API called: TransactionDetailsApi#get_transaction\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
		rescue
			puts 'Cannot write to log'
		end
	  end
      return data, status_code, headers
    end
  end
end
